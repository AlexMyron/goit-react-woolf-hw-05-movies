{"version":3,"file":"static/js/690.69a612ce.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/index.jsx","pages/Home.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movies-container\":\"MoviesList_movies-container__arASz\",\"movie-item\":\"MoviesList_movie-item__QOstQ\",\"movie-image\":\"MoviesList_movie-image__zvFVh\",\"movie-info\":\"MoviesList_movie-info__XButI\"};","import { Link } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <div className={css['movies-container']}>\n      {movies &&\n        movies.map(({ id, name, poster_path, title }) => (\n          <Link to={`movies/${id}`} key={id} className={css['movie-item']}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={name}\n              className={css['movie-image']}\n              height=\"385\"\n              loading=\"lazy\"\n            />\n            <div className={css['movie-info']}>\n              <h3>{name || title}</h3>\n            </div>\n          </Link>\n        ))}\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { useState, useEffect } from 'react';\n\nimport MoviesList from 'components/MoviesList';\nimport { getTrendList } from 'services/api';\n\nconst Home = () => {\n  const [moviesList, setMoviesList] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const { results } = await getTrendList();\n\n        setMoviesList(results);\n      } catch (err) {\n        setErrorMessage(err.message);\n      }\n    };\n    getMovies();\n  }, []);\n\n  if (errorMessage) {\n    return <div>{errorMessage}</div>;\n  }\n\n  return (\n    <section>\n      <MoviesList movies={moviesList} />\n    </section>\n  );\n};\n\nexport default Home;\n","const HEADERS = {\n  accept: 'application/json',\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYzhmMjBmNzFmOTIxOGJkMjhiZjViMjNkZDEyMmI4MSIsInN1YiI6IjYxMDZmMTlmY2FlNjMyMDAyZjcwMzU1MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.u4I428l0-ivjW2aoqxoT2hDtIKn6ZAq7SONhHeVIUF0',\n};\n\nconst options = {\n  method: 'GET',\n  headers: HEADERS,\n};\n\nexport const getTrendList = async page => {\n  const res = await fetch(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  );\n  if (!res.ok)\n    throw new Error(\n      `There is an issue with trend movies response with a status ${res.status}. Please, Try again later`\n    );\n\n  return await res.json();\n};\n\nexport const getMovieById = async movieId => {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n  if (!res.ok)\n    throw new Error(\n      `Failed to load movies. Please try again later. Status code ${res.status}.`\n    );\n\n  return await res.json();\n};\n\nexport const getMoviesByName = async query => {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  if (!res.ok)\n    throw new Error(\n      `Failed to load movies. Please try again later. Status code ${res.status}.`\n    );\n\n  return await res.json();\n};\n\nexport const getMovieCast = async movieId => {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  if (!res.ok)\n    throw new Error(\n      `Failed to load cast data. Please try again later. Status code ${res.status}.`\n    );\n\n  return await res.json();\n};\n\nexport const getMovieReviews = async movieId => {\n  const res = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`, options);\n\n  if (!res.ok)\n    throw new Error(\n      `Failed to fetch reviews. Please, try again later. Status code ${res.status}.`\n    );\n\n  return await res.json();\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["_ref","movies","_jsx","className","css","children","map","_ref2","id","name","poster_path","title","_jsxs","Link","to","concat","src","alt","height","loading","_useState","useState","_useState2","_slicedToArray","moviesList","setMoviesList","_useState3","_useState4","errorMessage","setErrorMessage","useEffect","getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getTrendList","results","_context","prev","next","getTrendList","sent","t0","message","stop","apply","arguments","MoviesList","options","method","headers","accept","Authorization","page","res","fetch","ok","Error","status","json","abrupt","_x","getMovieById","_callee2","movieId","_context2","_x2","getMoviesByName","_ref3","_callee3","query","_context3","_x3","getMovieCast","_ref4","_callee4","_context4","_x4","getMovieReviews","_ref5","_callee5","_context5","_x5","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}